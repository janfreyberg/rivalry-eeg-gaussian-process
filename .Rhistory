install.packages("corrr")
library(tidyr)
library(dplyr)
library(ggplot2)
data <- read.csv("predictionaccuracy.csv")
data$lowfreq = 1 - data$lowfreq
precisiondata <- read.csv("predictionprecision.csv")
data$mixedprecision = precisiondata$mixed
data$highprecision = precisiondata$highfreq
data$lowprecision = precisiondata$lowfreq
proportiondata <- read.csv("perceptproportions.csv")
data$mixedproportion = proportiondata$mixed
data$highproportion = proportiondata$highfreq
data$lowproportion = proportiondata$lowfreq
ggplot(data, aes(x=highfreq, y = lowfreq)) +
geom_point()
ggplot(data, aes(x=mixed, y = lowfreq)) +
geom_point()
ggplot(data, aes(x = highfreq, y = highprecision)) +
geom_point()
ggplot(data, aes(x = mixed, y = mixedprecision)) +
geom_point()
ggplot(data, aes(x = mixedprecision, y = mixedproportion)) +
geom_point()
setwd("C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-gaussian-process")
library(tidyr)
library(dplyr)
library(ggplot2)
data <- read.csv("predictionaccuracy.csv")
data$lowfreq = 1 - data$lowfreq
precisiondata <- read.csv("predictionprecision.csv")
data$mixedprecision = precisiondata$mixed
data$highprecision = precisiondata$highfreq
data$lowprecision = precisiondata$lowfreq
proportiondata <- read.csv("perceptproportions.csv")
data$mixedproportion = proportiondata$mixed
data$highproportion = proportiondata$highfreq
data$lowproportion = proportiondata$lowfreq
ggplot(data, aes(x=highfreq, y = lowfreq)) +
geom_point()
ggplot(data, aes(x=mixed, y = lowfreq)) +
geom_point()
ggplot(data, aes(x = highfreq, y = highprecision)) +
geom_point()
ggplot(data, aes(x = mixed, y = mixedprecision)) +
geom_point()
ggplot(data, aes(x = mixedprecision, y = mixedproportion)) +
geom_point()
corrr(data)
library(corrr)
correlate(data)
correlate(data)
data$subject <- []
data$subject <- None
data$subject <- none
data$subject <- NULL
correlate(data)
correlate(data) %>% rearrange()
correlate(data) %>% rearrange() %>% fashion()
correlate(data) %>% rearrange() %>% rplot()
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-gaussian-process/analyse_predictions.r', echo=TRUE)
View(data)
install.packages("ggplot2")
library(dplyr)
library(tidyr)
library(ggplot2)
data <- read.csv('all-results.csv')
timedata <- data %>%
# drop all nonrelevant data
select(id, starts_with("timecourse")) %>%
# reshape into columns
gather(percepttime, probability, -id) %>%
mutate(percept = as.factor(substring(percepttime, 11, nchar(percepttime)-3)),
time = as.factor(substring(percepttime, nchar(percepttime)-2)),
id = as.character(id))
ggplot(timedata, aes(x=time, y=probability, group=percept, color=percept)) +
# geom_linerange(aes(ymax=probability-))
geom_line(stat=stat_summary(fun.y=mean))
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
ggplot(timedata, aes(x=time, y=probability, group=percept, color=percept)) +
# geom_linerange(aes(ymax=probability-))
# geom_line(stat=stat_summary(fun.y=mean))
stat_summary(fun.y=mean, geom="line")
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
ggplot(timedata, aes(x=time, y=probability, group=percept, color=percept)) +
# geom_linerange(aes(ymax=probability-))
# geom_line(stat=stat_summary(fun.y=mean))
stat_summary(fun.y=mean, geom="line") +
stat_summary(fun.data=mean_se, geom="ribbon")
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
ggplot(timedata, aes(x=time, y=probability, group=percept, color=percept)) +
# geom_linerange(aes(ymax=probability-))
# geom_line(stat=stat_summary(fun.y=mean))
stat_summary(fun.y=mean, geom="line") +
stat_summary(fun.data=mean_cl_normal, geom="ribbon")
mtg
data = mtg
mtcars
ggplot(mtcars, aes=(x=as.factor(cyl), y=hp, color=as.factor(cyl))) + geom_line()
ggplot(mtcars, aes=(x=as.factor(cyl) y=hp, color=as.factor(cyl))) + geom_line()
ggplot(mtcars, aes=(x=cyl, y=hp, color=cyl)) + geom_line()
ggplot(mtcars, aes(x=cyl, y=hp, color=cyl)) + geom_line()
ggplot(mtcars, aes(x=disp, y=hp, color=cyl)) + geom_line()
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
ggplot(mtcars, aes(x=as.factor(cyl), y=hp, color=cyl)) + geom_line()
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
tibble?
?tibble
id <- c("a", "a", "b", "b", "c", "c")
fac1 <- as.factor(c("m", "n", "m", "n", "m", "n"))
var1 <- 1:6
df <- tibble(id, fac1, var1)
df
ggplot(df, aes(x=fac1, y=var1)) + stat_summary(fun.y=mean, geom="line")
ggplot(df, aes(x=fac1, y=var1, grou=id)) + stat_summary(fun.y=mean, geom="line")
grp <- c("a", "a", "a", "b", "b", "b", "c", "c", "c")
grp <- c("a", "a", "a", "a", "b", "b", "b", "b", "c", "c", "c", "c")
fac1 <- as.factor(c("m", "m", "n", "n", "m", "m", "n", "n", "m", "m", "n", "n"))
var1 <- 1:12
df <- tibble(grp, fac1, var1)
df
ggplot(df, aes=(x=fac1, group=grp, y=var1)) + geom_point()
ggplot(df, aes(x=fac1, group=grp, y=var1)) + geom_point()
ggplot(df, aes(x=fac1, group=grp, y=var1)) + stat_summary(fun.y=mean, geom="line")
ggplot(df, aes(x=fac1, group=grp, y=var1)) + geom_line(stat=stat_summary(fun.y=mean))
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
ggplot(timedata, aes(x=time, y=probability, group=percept, color=percept)) +
# geom_linerange(aes(ymax=probability-))
geom_line(stat="summary", fun.y=mean)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
ggplot(timedata, aes(x=time, y=probability, group=percept, color=percept, fill=percept)) +
geom_ribbon(stat="summary", fun.data=mean_se, alpha=0.2) +
geom_line(stat="summary", fun.y=mean)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
ggplot(timedata, aes(x=time, y=probability, group=percept, color=percept, fill=percept)) +
geom_ribbon(aes(color=NULL), stat="summary", fun.data=mean_se, alpha=0.2) +
geom_line(stat="summary", fun.y=mean)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
ggplot(timedata, aes(x=time, y=probability, group=percept, color=percept, fill=percept)) +
geom_ribbon(aes(color=NULL), stat="summary", fun.data=mean_cl_normal, alpha=0.2) +
geom_line(stat="summary", fun.y=mean)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
?labs
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r')
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r', echo=TRUE)
timedata.bynext$probability
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r', echo=TRUE)
timedata.bynext$probability
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/mung-data.r', echo=TRUE)
head(timedata)
ggplot(timedata.bynext, aes(x=time, y=probability, group=percept, color=percept, fill=percept)) +
theme_bw() +
geom_ribbon(aes(color=NULL), stat="summary", fun.data=mean_se, alpha=0.2) +
geom_line(stat="summary", fun.y=mean) +
labs(x="Time (Fraction of total percept duration)",
y="Probability of Percept being 'High'",
fill="Actual Report") +
guides(color=FALSE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
geom_line(aes(group=id), alpha=0.2, stat="summary", fun.y="mean") +
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
source('C:/Users/k1513504/Dropbox/Documents/projects/rivalry-eeg-decoding/plot-timecourse.r', echo=TRUE)
summary(cars)
?source
source('./plot-timecourse.r')
?source
?par
source('plot-timecourse.r', print.eval = TRUE)
?install.packages
getOption("repos")
